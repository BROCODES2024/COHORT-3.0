https://petal-estimate-4e9.notion.site/Authentincation-a4b43c7cc1d14535a7b5b366080095fa

# Auth workflow (Bank example)

When you go to open a bank account in a bank, you

1. Go to the bank and give your information. 
2. They give you back a `cheque book`
3. Every time you want to send money, you write it in the cheque book and send it over to the bank
4. That is how the bank identifies you.

The workflow for authentication usually looks as follows - 
1. The user comes to your website (courses.com)
2. The user sends a request to `/signin` with their `username` and `password`
3. The user gets back a `token`
4. In every subsequent request, the user sends the token to identify it self to the backend.

Think of the token like a `secret` that the server has given you.
You send that `secret` back to the server in every request so that the server knows who you are. 

# Creating an express app

Lets initialise an express app that we will use to generate an `authenticated backend` today.

Initialise an empty Node.js project:
npm init -y
Create an index.js file, open the project in visual studio code:
touch index.js
Add express as a dependency:
npm i express
Create two new  POST routes, one for signing up and one for signing in
Use express.json as a middleware to parse the post request body
app.use(express.json());
Create an in memory variable called users where you store the username , password and a token (we will come to where this token is created later.
const users = []
Complete the signup endpoint to store user information in the in memory variable
Create a function called generateToken that generates a random string for you
Finish the signin endpoint. It should generate a token for the user and put it in the in memory variable for that user

This can be improved further by
1. Adding zod for input validation
2. Making sure the same user cant sign up twice
3. Persisting data so it stays even if the process crashes
We’ll be covering all of this eventually

# Creating an authenticated EP

Let’s create an endpoint (`/me` ) that returns the user their information `only if they send their token`
